#!/bin/sh

# These settings come from Jenkins
# but can be set here for testing.

# Default to 'cdev' db.
# export DB_HOST=nodes.nonprod.kube.tstllc.net
# export DB_PORT=32114
# export DB_USER=root
# export DB_PASS=kube-aws

if [ -z "$DB_HOST" ] || [ -z "$DB_PORT" ] || [ -z "$DB_USER" ] || [ -z "$DB_PASS" ]; then
  echo "Missing DB settings."
  exit 1
else
  echo "Importing data from $DB_HOST:$DB_PORT with $DB_USER."
fi

# TODO: We should be able to build this from CLUSTER
# but at the moment we do not have a 'nonprod' instance
# of ElasticSearch. We only have 'lower' and 'prodint'.
# export ES_HOST=nodes.lower.kube.tstllc.net
export ES_PORT=32200

if [ -z "$ES_HOST" ] || [ -z "$ES_PORT" ]; then
  echo "Missing ElasticSearch settings."
  exit 1
else
  echo "Saving data to ElasticSearch node $ES_HOST."
fi

if ! nc -z "$ES_HOST" "$ES_PORT"; then
  echo "Could not connect to ElasticSearch host $ES_HOST:$ES_PORT."
  exit 1
fi

NAMESPACE=$1
DELETE_DATA=$2

if [ -z "$NAMESPACE" ]; then
  echo "Missing NAMESPACE setting."
  exit 1
else
  echo "Targeting Elastic Search data for $NAMESPACE."
fi

if [ -n "$DELETE_DATA" ]; then
  echo "Deleting data...."
  ES_URL="http://$ES_HOST:$ES_PORT/booking-$NAMESPACE"
  echo $ES_URL
  curl -i -XDELETE "$ES_URL"
  echo
  echo "Done."
fi

# START_YEAR=2018
# END_YEAR=2020

if [ -z "$START_YEAR" ] || [ -z "$END_YEAR" ]; then
  echo "Missing start/end year settings."
  exit 1
fi

# Convert string settings to integers and create range.
YEARS=$(seq $((START_YEAR + 0)) $((END_YEAR + 0)))

for YEAR in $YEARS; do
  MONTHS=$(seq 1 12)
  for MONTH in $MONTHS; do
    echo "Importing data from $YEAR $MONTH."
    java -jar app-standalone.jar $NAMESPACE $YEAR $MONTH
  done
done

echo
echo "Done."
